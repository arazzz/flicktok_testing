---
import PrototypeLayout from "../components/layouts/PrototypeLayout.astro";
---

<PrototypeLayout title="Setup">
  <div class="flex p-4" slot="header">
    <div class="flex-1">
      <div class="flex flex-col h-full items-center justify-center">
        <h6>Headset Status:</h6>
        <headset-status-text></headset-status-text>
      </div>
    </div>
    <div class="flex-1">
      <div class="flex flex-col h-full items-center justify-center">
        <div class="flex items-center space-x-4">
          <div>
            <h6>FES System:</h6>
          </div>
          <div>
            <button
              class="btn btn-neutral"
              onclick="window.api.send('toMain', { id: 'run-fes-test'})"
            >
              Run Test
            </button>
          </div>
        </div>
      </div>
    </div>
  </div>
  <div
    class="flex flex-col space-y-4 w-1/2 w-max-md mx-auto h-[calc(100%-85px)] justify-center"
  >
    <a class="btn btn-primary btn-disabled" href="/train" id="train-btn"
      >Train BCI</a
    >
    <a class="btn btn-primary" href="#">Options</a>
  </div>

  <script>
    import globalStore from "../stores/global.store.js";

    class HeadsetStatusText extends HTMLElement {
      constructor() {
        super();
      }

      setHeadsetStatus(value) {
        this.innerText = value ? "Connected" : "No EEG available";
        this.classList.toggle("text-red-500", !value);
        this.classList.toggle("text-green-500", value);
        const trainBtn = document.getElementById("train-btn");
        trainBtn?.classList?.toggle("btn-disabled", !value);
      }

      connectedCallback() {
        // Runs when the opening tag is added to the DOM
        this.setHeadsetStatus(globalStore.eegStreamIsAvailable);
        globalStore.__fns.subscribe("eegStreamIsAvailable", (value) =>
          this.setHeadsetStatus(value)
        );
      }
    }

    customElements.define("headset-status-text", HeadsetStatusText);
  </script>
</PrototypeLayout>
