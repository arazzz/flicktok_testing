---
const { ...props } = Astro.props;
---

<training-btn {...props}></training-btn>

<script>
  // @ts-nocheck
  import globalStore from "/src/stores/global.store.js";
  import { subscribeKey } from "valtio/utils";

  class TrainingBtn extends HTMLElement {
    constructor() {
      super();

      this.classList.add("btn", "btn-neutral");

      globalStore.ui.trainingBtn.state = "running";

      this.toggleBtnState();

      this.trainingStateListener = subscribeKey(
        globalStore.ui.trainingState,
        "state",
        (v) => {
          if (v === "complete") this.toggleBtnState();
        }
      );
    }

    toggleBtnState() {
      if (globalStore.ui.trainingBtn.state === "idle") {
        globalStore.ui.trainingBtn = {
          text: "Stop Training",
          state: "running",
        };
      } else if (globalStore.ui.trainingBtn.state === "running") {
        globalStore.ui.trainingBtn = {
          text: "Start Training",
          state: "idle",
        };
      }
      this.innerHTML = globalStore.ui.trainingBtn.text;
    }

    handleClick() {
      // @ts-ignore
      window.api.send("toMain", {
        id: "set-training-btn-state",
        data: globalStore.ui.trainingBtn.state === "idle" ? "start" : "stop",
      });
      this.toggleBtnState();
    }

    connectedCallback() {
      this.addEventListener("click", this.handleClick);
    }

    disconnectedCallback() {
      this.trainingStateListener(); // unsubscribe on element removal
      // this.removeEventListener("click", this.handleClick);
    }
  }

  customElements.define("training-btn", TrainingBtn);
</script>
